{
  "openapi": "3.0.3",
  "info": {
    "title": "Dome API",
    "description": "APIs for prediction markets.",
    "version": "0.0.1"
  },
  "servers": [
    { "url": "https://api.domeapi.io/v1/" }
  ],
  "paths": {
    "/polymarket/market-price/{token_id}": {
      "parameters": [
        {
          "name": "token_id",
          "in": "path",
          "required": true,
          "schema": { "type": "string" }
        }
      ],
      "get": {
        "operationId": "getMarketPrice",
        "summary": "Get Market Price",
        "description": "Fetches the current market price for a market by `token_id`. Allows historical lookups via the `at_time` query parameter.",
        "parameters": [
          {
            "name": "at_time",
            "in": "query",
            "required": false,
            "description": "Unix timestamp (in seconds) to fetch a historical market price.",
            "schema": { "type": "integer", "example": 1740000000 }
          }
        ],
        "responses": {
          "200": {
            "description": "Market price response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "price": { "type": "number", "example": 0.215 },
                    "at_time": { "type": "integer", "example": 1757008834 }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/polymarket/candlesticks/{condition_id}": {
      "parameters": [
        {
          "name": "condition_id",
          "in": "path",
          "required": true,
          "schema": { "type": "string" }
        }
      ],
      "get": {
        "operationId": "getCandlesticks",
        "summary": "Get Candlestick API",
        "description": "Fetches historical candlestick data for a market identified by `token id`, over a specified interval.",
        "parameters": [
          {
            "name": "start_time",
            "in": "query",
            "required": true,
            "description": "Unix timestamp (in seconds) for start of time range",
            "schema": { "type": "integer", "example": 1640995200 }
          },
          {
            "name": "end_time",
            "in": "query",
            "required": true,
            "description": "Unix timestamp (in seconds) for end of time range",
            "schema": { "type": "integer", "example": 1672531200 }
          },
          {
            "name": "interval",
            "in": "query",
            "required": false,
            "description": "Interval length: 1 = 1m, 60 = 1h, 1440 = 1d. Defaults to 1m.",
            "schema": { "type": "integer", "enum": [1, 60, 1440], "default": 1 }
          }
        ],
        "responses": {
          "200": {
            "description": "Candlestick response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "candlesticks": {
                      "type": "array",
                      "description": "Array of market candlestick data, where each element is a tuple containing candlestick data array and token metadata",
                      "items": {
                        "type": "array",
                        "description": "Tuple of [candlestick_data_array, token_metadata]",
                        "minItems": 2,
                        "maxItems": 2,
                        "example": [
                          [
                            {
                              "end_period_ts": 1727827200,
                              "open_interest": 8456498,
                              "price": {
                                "open": 0,
                                "high": 0,
                                "low": 0,
                                "close": 0,
                                "open_dollars": "0.0049",
                                "high_dollars": "0.0049",
                                "low_dollars": "0.0048",
                                "close_dollars": "0.0048",
                                "mean": 0,
                                "mean_dollars": "0.0049",
                                "previous": 0,
                                "previous_dollars": "0.0049"
                              },
                              "volume": 8456498,
                              "yes_ask": {
                                "open": 0.00489,
                                "close": 0.0048200000000000005,
                                "high": 0.00491,
                                "low": 0.0048,
                                "open_dollars": "0.0049",
                                "close_dollars": "0.0048",
                                "high_dollars": "0.0049",
                                "low_dollars": "0.0048"
                              },
                              "yes_bid": {
                                "open": 0.00489,
                                "close": 0.004829999990880811,
                                "high": 0.004910000000138527,
                                "low": 0.0048,
                                "open_dollars": "0.0049",
                                "close_dollars": "0.0048",
                                "high_dollars": "0.0049",
                                "low_dollars": "0.0048"
                              }
                            }
                          ],
                          {
                            "token_id": "21742633143463906290569050155826241533067272736897614950488156847949938836455"
                          }
                        ]
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid parameters",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": { "type": "string", "example": "Missing required query parameters" },
                    "required": { "type": "string", "example": "start_time, end_time" }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/polymarket/wallet/pnl/{wallet_address}": {
      "parameters": [
        {
          "name": "wallet_address",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "pattern": "^0x[0-9a-fA-F]{40}$",
            "example": "0x1234567890abcdef1234567890abcdef12345678"
          }
        }
      ],
      "get": {
        "operationId": "getWalletPnl",
        "summary": "Get Wallet PnL",
        "description": "Fetches the profit and loss (PnL) for a specific wallet address over a specified time range and granularity.",
        "parameters": [
          {
            "name": "granularity",
            "in": "query",
            "required": true,
            "schema": { "type": "string", "enum": ["day", "week", "month", "year", "all"], "example": "day" }
          },
          {
            "name": "start_time",
            "in": "query",
            "required": false,
            "description": "Defaults to first day of first trade if not provided.",
            "schema": { "type": "integer", "example": 1726857600 }
          },
          {
            "name": "end_time",
            "in": "query",
            "required": false,
            "description": "Defaults to the current date if not provided.",
            "schema": { "type": "integer", "example": 1758316829 }
          }
        ],
        "responses": {
          "200": {
            "description": "PnL response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "granularity": { "type": "string", "example": "day" },
                    "start_time": { "type": "integer", "example": 1726857600 },
                    "end_time": { "type": "integer", "example": 1758316829 },
                    "wallet_address": { "type": "string", "example": "0x7c3db723f1d4d8cb9c550095203b686cb11e5c6b" },
                    "pnl_over_time": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "timestamp": { "type": "integer", "example": 1726857600 },
                          "pnl_to_date": { "type": "number", "example": 2001 }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": { "type": "string", "example": "BAD_REQUEST" },
                    "message": { "type": "string", "example": "Invalid or missing parameters." }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": { "type": "string", "example": "INTERNAL_SERVER_ERROR" },
                    "message": { "type": "string", "example": "Internal Server Error. Dome Admins contacted." }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/polymarket/orders": {
      "get": {
        "operationId": "getOrders",
        "summary": "Get Orders",
        "description": "Fetches order data with optional filtering by market, condition, token, time range, and user. Returns orders that match either primary or secondary token IDs for markets. At least one of market_slug, condition_id, user, or token_id must be provided. Only one of market_slug, token_id, or condition_id can be provided.",
        "parameters": [
          {
            "name": "market_slug",
            "in": "query",
            "required": false,
            "description": "Filter orders by market slug",
            "schema": { "type": "string", "example": "bitcoin-up-or-down-july-25-8pm-et" }
          },
          {
            "name": "condition_id",
            "in": "query",
            "required": false,
            "description": "Filter orders by condition ID",
            "schema": { "type": "string", "example": "0x4567b275e6b667a6217f5cb4f06a797d3a1eaf1d0281fb5bc8c75e2046ae7e57" }
          },
          {
            "name": "token_id",
            "in": "query",
            "required": false,
            "description": "Filter orders by token ID",
            "schema": { "type": "string", "example": "58519484510520807142687824915233722607092670035910114837910294451210534222702" }
          },
          {
            "name": "start_time",
            "in": "query",
            "required": false,
            "description": "Filter orders from this Unix timestamp in seconds (inclusive)",
            "schema": { "type": "integer", "example": 1640995200 }
          },
          {
            "name": "end_time",
            "in": "query",
            "required": false,
            "description": "Filter orders until this Unix timestamp in seconds (inclusive)",
            "schema": { "type": "integer", "example": 1672531200 }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "description": "Number of orders to return (1-1000)",
            "schema": { "type": "integer", "minimum": 1, "maximum": 1000, "default": 100, "example": 50 }
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "description": "Number of orders to skip for pagination",
            "schema": { "type": "integer", "minimum": 0, "default": 0, "example": 0 }
          },
          {
            "name": "user",
            "in": "query",
            "required": false,
            "description": "Filter orders by user (wallet address)",
            "schema": { "type": "string", "example": "0x7c3db723f1d4d8cb9c550095203b686cb11e5c6b" }
          }
        ],
        "responses": {
          "200": {
            "description": "Orders response with pagination",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "orders": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "token_id": {
                            "type": "string",
                            "example": "58519484510520807142687824915233722607092670035910114837910294451210534222702"
                          },
                          "side": {
                            "type": "string",
                            "enum": ["BUY", "SELL"],
                            "example": "BUY"
                          },
                          "market_slug": {
                            "type": "string",
                            "example": "bitcoin-up-or-down-july-25-8pm-et"
                          },
                          "condition_id": {
                            "type": "string",
                            "example": "0x4567b275e6b667a6217f5cb4f06a797d3a1eaf1d0281fb5bc8c75e2046ae7e57"
                          },
                          "shares": { "type": "number", "example": 4995000,"description": "Raw number of shares purchased (from the blockchain) " },
                          "shares_normalized": { "type": "number", "example": 4.995,"description": "Number of shares purchased normalized (this is raw divided by 1000000)" },
                          "price": { "type": "number", "example": 0.65 },
                          "tx_hash": {
                            "type": "string",
                            "example": "0x1234567890abcdef1234567890abcdef1234567890abcdef1234567890abcdef12"
                          },
                          "title": {
                            "type": "string",
                            "example": "Will Bitcoin be above $50,000 on July 25, 2025 at 8:00 PM ET?"
                          },
                          "timestamp": {
                            "type": "integer",
                            "description": "Unix timestamp in seconds when the order was placed",
                            "example": 1757008834
                          },
                          "order_hash": {
                            "type": "string",
                            "example": "0xabcdef1234567890abcdef1234567890abcdef1234567890abcdef1234567890"
                          },
                          "user": {
                            "type": "string",
                            "description": "Maker address of the order",
                            "example": "0x7c3db723f1d4d8cb9c550095203b686cb11e5c6b"
                          }
                        }
                      }
                    },
                    "pagination": {
                      "type": "object",
                      "properties": {
                        "limit": { "type": "integer", "example": 50 },
                        "offset": { "type": "integer", "example": 0 },
                        "total": {
                          "type": "integer",
                          "description": "Total number of orders matching the filters",
                          "example": 1250
                        },
                        "has_more": {
                          "type": "boolean",
                          "description": "Whether there are more orders available",
                          "example": true
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid parameters or validation errors",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": { "type": "string", "example": "Invalid start_time parameter" },
                    "message": { "type": "string", "example": "start_time must be a valid Unix timestamp" }
                  }
                },
                "examples": {
                  "invalid_timestamp": {
                    "summary": "Invalid timestamp",
                    "value": {
                      "error": "Invalid start_time parameter",
                      "message": "start_time must be a valid Unix timestamp"
                    }
                  },
                  "invalid_time_range": {
                    "summary": "Invalid time range",
                    "value": {
                      "error": "Invalid time range",
                      "message": "start_time must be less than end_time"
                    }
                  },
                  "invalid_limit": {
                    "summary": "Invalid limit",
                    "value": {
                      "error": "Invalid limit parameter",
                      "message": "limit must be a number between 1 and 1000"
                    }
                  },
                  "invalid_offset": {
                    "summary": "Invalid offset",
                    "value": {
                      "error": "Invalid offset parameter",
                      "message": "offset must be a non-negative number"
                    }
                  },
                  "missing_required_filter": {
                    "summary": "Missing required filter",
                    "value": {
                      "error": "Missing required filter parameter",
                      "message": "At least one of market_slug, condition_id, user, or token_id must be provided"
                    }
                  },
                  "invalid_filter_combination": {
                    "summary": "Invalid filter combination",
                    "value": {
                      "error": "Invalid filter combination",
                      "message": "Only one of market_slug, token_id, or condition_id can be provided"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/matching-markets/sports/": {
      "get": {
        "operationId": "getMatchingMarketsSports",
        "summary": "Get Matching Markets for Sports",
        "description": "Find equivalent markets across different prediction market platforms (Polymarket, Kalshi, etc.) for sports events. Provide either one or more Polymarket market slugs or Kalshi event tickers.",
        "parameters": [
          {
            "name": "polymarket_market_slug",
            "in": "query",
            "required": false,
            "description": "The Polymarket market slug(s) to find matching markets for. To get multiple markets at once, provide the query param multiple times with different slugs. Can not be combined with kalshi_event_ticker.",
            "schema": { 
              "type": "array",
              "items": { "type": "string" },
              "example": ["nfl-ari-den-2025-08-16", "nfl-dal-phi-2025-09-04"]
            },
            "style": "form",
            "explode": true
          },
          {
            "name": "kalshi_event_ticker",
            "in": "query",
            "required": false,
            "description": "The Kalshi event ticker(s) to find matching markets for. To get multiple markets at once, provide the query param multiple times with different tickers. Can not be combined with polymarket_market_slug.",
            "schema": { 
              "type": "array",
              "items": { "type": "string" },
              "example": ["KXNFLGAME-25AUG16ARIDEN", "KXNFLGAME-25SEP04DALPHI"]
            },
            "style": "form",
            "explode": true
          }
        ],
        "responses": {
          "200": {
            "description": "Matching markets response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "markets": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "array",
                        "items": {
                          "oneOf": [
                            {
                              "type": "object",
                              "description": "Kalshi market",
                              "properties": {
                                "platform": { "type": "string", "enum": ["KALSHI"], "example": "KALSHI" },
                                "event_ticker": { "type": "string", "example": "KXNFLGAME-25AUG16ARIDEN" },
                                "market_tickers": {
                                  "type": "array",
                                  "items": { "type": "string" },
                                  "example": ["KXNFLGAME-25AUG16ARIDEN-ARI", "KXNFLGAME-25AUG16ARIDEN-DEN"]
                                }
                              },
                              "required": ["platform", "event_ticker", "market_tickers"]
                            },
                            {
                              "type": "object",
                              "description": "Polymarket market",
                              "properties": {
                                "platform": { "type": "string", "enum": ["POLYMARKET"], "example": "POLYMARKET" },
                                "market_slug": { "type": "string", "example": "nfl-ari-den-2025-08-16" },
                                "token_ids": {
                                  "type": "array",
                                  "items": { "type": "string" },
                                  "example": [
                                    "34541522652444763571858406546623861155130750437169507355470933750634189084033",
                                    "104612081187206848956763018128517335758189185749897027211060738913329108425255"
                                  ]
                                }
                              },
                              "required": ["platform", "market_slug", "token_ids"]
                            }
                          ]
                        }
                      },
                      "example": {
                        "nfl-ari-den-2025-08-16": [
                          {
                            "platform": "KALSHI",
                            "event_ticker": "KXNFLGAME-25AUG16ARIDEN",
                            "market_tickers": ["KXNFLGAME-25AUG16ARIDEN-ARI", "KXNFLGAME-25AUG16ARIDEN-DEN"]
                          },
                          {
                            "platform": "POLYMARKET",
                            "market_slug": "nfl-ari-den-2025-08-16",
                            "token_ids": [
                              "34541522652444763571858406546623861155130750437169507355470933750634189084033",
                              "104612081187206848956763018128517335758189185749897027211060738913329108425255"
                            ]
                          }
                        ],
                        "nfl-dal-phi-2025-09-04": [
                          {
                            "platform": "KALSHI",
                            "event_ticker": "KXNFLGAME-25SEP04DALPHI",
                            "market_tickers": ["KXNFLGAME-25SEP04DALPHI-DAL", "KXNFLGAME-25SEP04DALPHI-PHI"]
                          }
                        ]
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Missing or invalid parameters",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": { "type": "string", "example": "Missing required parameter" },
                    "message": { "type": "string", "example": "At least one polymarket_market_slug or kalshi_event_ticker is required" }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found - No matching markets found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": { "type": "string", "example": "Not found" },
                    "message": { "type": "string", "example": "No matching markets found for the provided parameters" }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/matching-markets/sports/{sport}/": {
      "parameters": [
        {
          "name": "sport",
          "in": "path",
          "required": true,
          "description": "The sport to find matching markets for",
          "schema": { 
            "type": "string",
            "enum": ["nfl", "mlb"],
            "example": "nfl"
          }
        }
      ],
      "get": {
        "operationId": "getMatchingMarketsSportsBySport",
        "summary": "Get Matching Markets for Sports by Sport and Date",
        "description": "Find equivalent markets across different prediction market platforms (Polymarket, Kalshi, etc.) for sports events by sport and date.",
        "parameters": [
          {
            "name": "date",
            "in": "query",
            "required": true,
            "description": "The date to find matching markets for in YYYY-MM-DD format",
            "schema": { 
              "type": "string",
              "pattern": "^\\d{4}-\\d{2}-\\d{2}$",
              "example": "2025-08-16"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Matching markets response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "markets": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "array",
                        "items": {
                          "oneOf": [
                            {
                              "type": "object",
                              "description": "Kalshi market",
                              "properties": {
                                "platform": { "type": "string", "enum": ["KALSHI"], "example": "KALSHI" },
                                "event_ticker": { "type": "string", "example": "KXNFLGAME-25AUG16ARIDEN" },
                                "market_tickers": {
                                  "type": "array",
                                  "items": { "type": "string" },
                                  "example": ["KXNFLGAME-25AUG16ARIDEN-ARI", "KXNFLGAME-25AUG16ARIDEN-DEN"]
                                }
                              },
                              "required": ["platform", "event_ticker", "market_tickers"]
                            },
                            {
                              "type": "object",
                              "description": "Polymarket market",
                              "properties": {
                                "platform": { "type": "string", "enum": ["POLYMARKET"], "example": "POLYMARKET" },
                                "market_slug": { "type": "string", "example": "nfl-ari-den-2025-08-16" },
                                "token_ids": {
                                  "type": "array",
                                  "items": { "type": "string" },
                                  "example": [
                                    "34541522652444763571858406546623861155130750437169507355470933750634189084033",
                                    "104612081187206848956763018128517335758189185749897027211060738913329108425255"
                                  ]
                                }
                              },
                              "required": ["platform", "market_slug", "token_ids"]
                            }
                          ]
                        }
                      },
                      "example": {
                        "nfl-ari-den-2025-08-16": [
                          {
                            "platform": "KALSHI",
                            "event_ticker": "KXNFLGAME-25AUG16ARIDEN",
                            "market_tickers": ["KXNFLGAME-25AUG16ARIDEN-ARI", "KXNFLGAME-25AUG16ARIDEN-DEN"]
                          },
                          {
                            "platform": "POLYMARKET",
                            "market_slug": "nfl-ari-den-2025-08-16",
                            "token_ids": [
                              "34541522652444763571858406546623861155130750437169507355470933750634189084033",
                              "104612081187206848956763018128517335758189185749897027211060738913329108425255"
                            ]
                          }
                        ]
                      }
                    },
                    "sport": { "type": "string", "example": "nfl" },
                    "date": { "type": "string", "example": "2025-08-16" }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Missing or invalid parameters",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": { "type": "string", "example": "Missing required parameter" },
                    "message": { "type": "string", "example": "date parameter is required" }
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {}
}
